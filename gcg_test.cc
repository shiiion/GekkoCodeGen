#include "gekko_code_gen.hh"
#include <iostream>

int main() {
   static_assert(0x70831000 == gekko_code_gen::parse(GEN_STR("andi. r3, r4, 0x1000")));
   static_assert(0x74831000 == gekko_code_gen::parse(GEN_STR("andis. r3, r4, 0x1000")));
   static_assert(0x60831000 == gekko_code_gen::parse(GEN_STR("ori r3, r4, 0x1000")));
   static_assert(0x64831000 == gekko_code_gen::parse(GEN_STR("oris r3, r4, 0x1000")));
   static_assert(0x68831000 == gekko_code_gen::parse(GEN_STR("xori r3, r4, 0x1000")));
   static_assert(0x6c831000 == gekko_code_gen::parse(GEN_STR("xoris r3, r4, 0x1000")));
   static_assert(0x60000000 == gekko_code_gen::parse(GEN_STR("nop")));
   static_assert(0x38641234 == gekko_code_gen::parse(GEN_STR("addi r3, r4, 0x1234")));
   static_assert(0x30641234 == gekko_code_gen::parse(GEN_STR("addic r3, r4, 0x1234")));
   static_assert(0x34641234 == gekko_code_gen::parse(GEN_STR("addic. r3, r4, 0x1234")));
   static_assert(0x3c641234 == gekko_code_gen::parse(GEN_STR("addis r3, r4, 0x1234")));
   static_assert(0x1c641234 == gekko_code_gen::parse(GEN_STR("mulli r3, r4, 0x1234")));
   static_assert(0x20641234 == gekko_code_gen::parse(GEN_STR("subfic r3, r4, 0x1234")));
   static_assert(0x7c832838 == gekko_code_gen::parse(GEN_STR("and r3, r4, r5")));
   static_assert(0x7c832839 == gekko_code_gen::parse(GEN_STR("and. r3, r4, r5")));
   static_assert(0x7c832878 == gekko_code_gen::parse(GEN_STR("andc r3, r4, r5")));
   static_assert(0x7c832879 == gekko_code_gen::parse(GEN_STR("andc. r3, r4, r5")));
   static_assert(0x7c832a38 == gekko_code_gen::parse(GEN_STR("eqv r3, r4, r5")));
   static_assert(0x7c832a39 == gekko_code_gen::parse(GEN_STR("eqv. r3, r4, r5")));
   static_assert(0x7c832b78 == gekko_code_gen::parse(GEN_STR("or r3, r4, r5")));
   static_assert(0x7c832b79 == gekko_code_gen::parse(GEN_STR("or. r3, r4, r5")));
   static_assert(0x7c832bb8 == gekko_code_gen::parse(GEN_STR("nand r3, r4, r5")));
   static_assert(0x7c832bb9 == gekko_code_gen::parse(GEN_STR("nand. r3, r4, r5")));
   static_assert(0x7c8328f8 == gekko_code_gen::parse(GEN_STR("nor r3, r4, r5")));
   static_assert(0x7c8328f9 == gekko_code_gen::parse(GEN_STR("nor. r3, r4, r5")));
   static_assert(0x7c832b38 == gekko_code_gen::parse(GEN_STR("orc r3, r4, r5")));
   static_assert(0x7c832b39 == gekko_code_gen::parse(GEN_STR("orc. r3, r4, r5")));
   static_assert(0x7c832830 == gekko_code_gen::parse(GEN_STR("slw r3, r4, r5")));
   static_assert(0x7c832831 == gekko_code_gen::parse(GEN_STR("slw. r3, r4, r5")));
   static_assert(0x7c832e30 == gekko_code_gen::parse(GEN_STR("sraw r3, r4, r5")));
   static_assert(0x7c832e31 == gekko_code_gen::parse(GEN_STR("sraw. r3, r4, r5")));
   static_assert(0x7c832c30 == gekko_code_gen::parse(GEN_STR("srw r3, r4, r5")));
   static_assert(0x7c832c31 == gekko_code_gen::parse(GEN_STR("srw. r3, r4, r5")));
   static_assert(0x7c6429ee == gekko_code_gen::parse(GEN_STR("stbux r3, r4, r5")));
   static_assert(0x7c6429ae == gekko_code_gen::parse(GEN_STR("stbx r3, r4, r5")));
   static_assert(0x7c642f2c == gekko_code_gen::parse(GEN_STR("sthbrx r3, r4, r5")));
   static_assert(0x7c642b6e == gekko_code_gen::parse(GEN_STR("sthux r3, r4, r5")));
   static_assert(0x7c642b2e == gekko_code_gen::parse(GEN_STR("sthx r3, r4, r5")));
   static_assert(0x7c642d2c == gekko_code_gen::parse(GEN_STR("stwbrx r3, r4, r5")));
   static_assert(0x7c64296e == gekko_code_gen::parse(GEN_STR("stwux r3, r4, r5")));
   static_assert(0x7c64292e == gekko_code_gen::parse(GEN_STR("stwx r3, r4, r5")));
   static_assert(0x7c832a78 == gekko_code_gen::parse(GEN_STR("xor r3, r4, r5")));
   static_assert(0x7c832a79 == gekko_code_gen::parse(GEN_STR("xor. r3, r4, r5")));
   static_assert(0x7c642a14 == gekko_code_gen::parse(GEN_STR("add r3, r4, r5")));
   static_assert(0x7c642e14 == gekko_code_gen::parse(GEN_STR("addo r3, r4, r5")));
   static_assert(0x7c642a15 == gekko_code_gen::parse(GEN_STR("add. r3, r4, r5")));
   static_assert(0x7c642e15 == gekko_code_gen::parse(GEN_STR("addo. r3, r4, r5")));
   static_assert(0x7c642814 == gekko_code_gen::parse(GEN_STR("addc r3, r4, r5")));
   static_assert(0x7c642c14 == gekko_code_gen::parse(GEN_STR("addco r3, r4, r5")));
   static_assert(0x7c642815 == gekko_code_gen::parse(GEN_STR("addc. r3, r4, r5")));
   static_assert(0x7c642c15 == gekko_code_gen::parse(GEN_STR("addco. r3, r4, r5")));
   static_assert(0x7c642914 == gekko_code_gen::parse(GEN_STR("adde r3, r4, r5")));
   static_assert(0x7c642d14 == gekko_code_gen::parse(GEN_STR("addeo r3, r4, r5")));
   static_assert(0x7c642915 == gekko_code_gen::parse(GEN_STR("adde. r3, r4, r5")));
   static_assert(0x7c642d15 == gekko_code_gen::parse(GEN_STR("addeo. r3, r4, r5")));
   static_assert(0x7c642bd6 == gekko_code_gen::parse(GEN_STR("divw r3, r4, r5")));
   static_assert(0x7c642fd6 == gekko_code_gen::parse(GEN_STR("divwo r3, r4, r5")));
   static_assert(0x7c642bd7 == gekko_code_gen::parse(GEN_STR("divw. r3, r4, r5")));
   static_assert(0x7c642fd7 == gekko_code_gen::parse(GEN_STR("divwo. r3, r4, r5")));
   static_assert(0x7c642b96 == gekko_code_gen::parse(GEN_STR("divwu r3, r4, r5")));
   static_assert(0x7c642f96 == gekko_code_gen::parse(GEN_STR("divwuo r3, r4, r5")));
   static_assert(0x7c642b97 == gekko_code_gen::parse(GEN_STR("divwu. r3, r4, r5")));
   static_assert(0x7c642f97 == gekko_code_gen::parse(GEN_STR("divwuo. r3, r4, r5")));
   static_assert(0x7c6428ee == gekko_code_gen::parse(GEN_STR("lbzux r3, r4, r5")));
   static_assert(0x7c6428ae == gekko_code_gen::parse(GEN_STR("lbzx r3, r4, r5")));
   static_assert(0x7c642aee == gekko_code_gen::parse(GEN_STR("lhaux r3, r4, r5")));
   static_assert(0x7c642aae == gekko_code_gen::parse(GEN_STR("lhax r3, r4, r5")));
   static_assert(0x7c642e2c == gekko_code_gen::parse(GEN_STR("lhbrx r3, r4, r5")));
   static_assert(0x7c642a6e == gekko_code_gen::parse(GEN_STR("lhzux r3, r4, r5")));
   static_assert(0x7c642a2e == gekko_code_gen::parse(GEN_STR("lhzx r3, r4, r5")));
   static_assert(0x7c642c2c == gekko_code_gen::parse(GEN_STR("lwbrx r3, r4, r5")));
   static_assert(0x7c64286e == gekko_code_gen::parse(GEN_STR("lwzux r3, r4, r5")));
   static_assert(0x7c64282e == gekko_code_gen::parse(GEN_STR("lwzx r3, r4, r5")));
   static_assert(0x7c642896 == gekko_code_gen::parse(GEN_STR("mulhw r3, r4, r5")));
   static_assert(0x7c642897 == gekko_code_gen::parse(GEN_STR("mulhw. r3, r4, r5")));
   static_assert(0x7c6429d6 == gekko_code_gen::parse(GEN_STR("mullw r3, r4, r5")));
   static_assert(0x7c642dd6 == gekko_code_gen::parse(GEN_STR("mullwo r3, r4, r5")));
   static_assert(0x7c6429d7 == gekko_code_gen::parse(GEN_STR("mullw. r3, r4, r5")));
   static_assert(0x7c642dd7 == gekko_code_gen::parse(GEN_STR("mullwo. r3, r4, r5")));
   static_assert(0x7c642850 == gekko_code_gen::parse(GEN_STR("subf r3, r4, r5")));
   static_assert(0x7c642c50 == gekko_code_gen::parse(GEN_STR("subfo r3, r4, r5")));
   static_assert(0x7c642851 == gekko_code_gen::parse(GEN_STR("subf. r3, r4, r5")));
   static_assert(0x7c642c51 == gekko_code_gen::parse(GEN_STR("subfo. r3, r4, r5")));
   static_assert(0x7c642810 == gekko_code_gen::parse(GEN_STR("subfc r3, r4, r5")));
   static_assert(0x7c642c10 == gekko_code_gen::parse(GEN_STR("subfco r3, r4, r5")));
   static_assert(0x7c642811 == gekko_code_gen::parse(GEN_STR("subfc. r3, r4, r5")));
   static_assert(0x7c642c11 == gekko_code_gen::parse(GEN_STR("subfco. r3, r4, r5")));
   static_assert(0x7c642910 == gekko_code_gen::parse(GEN_STR("subfe r3, r4, r5")));
   static_assert(0x7c642d10 == gekko_code_gen::parse(GEN_STR("subfeo r3, r4, r5")));
   static_assert(0x7c642911 == gekko_code_gen::parse(GEN_STR("subfe. r3, r4, r5")));
   static_assert(0x7c642d11 == gekko_code_gen::parse(GEN_STR("subfeo. r3, r4, r5")));
   static_assert(0x7c652050 == gekko_code_gen::parse(GEN_STR("sub r3, r4, r5")));
   static_assert(0x7c652450 == gekko_code_gen::parse(GEN_STR("subo r3, r4, r5")));
   static_assert(0x7c652051 == gekko_code_gen::parse(GEN_STR("sub. r3, r4, r5")));
   static_assert(0x7c652451 == gekko_code_gen::parse(GEN_STR("subo. r3, r4, r5")));
   static_assert(0x7c652010 == gekko_code_gen::parse(GEN_STR("subc r3, r4, r5")));
   static_assert(0x7c652410 == gekko_code_gen::parse(GEN_STR("subco r3, r4, r5")));
   static_assert(0x7c652011 == gekko_code_gen::parse(GEN_STR("subc. r3, r4, r5")));
   static_assert(0x7c652411 == gekko_code_gen::parse(GEN_STR("subco. r3, r4, r5")));
   static_assert(0x7c830034 == gekko_code_gen::parse(GEN_STR("cntlzw r3, r4")));
   static_assert(0x7c830035 == gekko_code_gen::parse(GEN_STR("cntlzw. r3, r4")));
   static_assert(0x7c830774 == gekko_code_gen::parse(GEN_STR("extsb r3, r4")));
   static_assert(0x7c830775 == gekko_code_gen::parse(GEN_STR("extsb. r3, r4")));
   static_assert(0x7c830734 == gekko_code_gen::parse(GEN_STR("extsh r3, r4")));
   static_assert(0x7c830735 == gekko_code_gen::parse(GEN_STR("extsh. r3, r4")));
   static_assert(0x7c834670 == gekko_code_gen::parse(GEN_STR("srawi r3, r4, 8")));
   static_assert(0x7c834671 == gekko_code_gen::parse(GEN_STR("srawi. r3, r4, 8")));
   static_assert(0x7c6401d4 == gekko_code_gen::parse(GEN_STR("addme r3, r4")));
   static_assert(0x7c6401d5 == gekko_code_gen::parse(GEN_STR("addme. r3, r4")));
   static_assert(0x7c640194 == gekko_code_gen::parse(GEN_STR("addze r3, r4")));
   static_assert(0x7c640195 == gekko_code_gen::parse(GEN_STR("addze. r3, r4")));
   static_assert(0x7c6400d0 == gekko_code_gen::parse(GEN_STR("neg r3, r4")));
   static_assert(0x7c6400d1 == gekko_code_gen::parse(GEN_STR("neg. r3, r4")));
   static_assert(0x7c6401d0 == gekko_code_gen::parse(GEN_STR("subfme r3, r4")));
   static_assert(0x7c6401d1 == gekko_code_gen::parse(GEN_STR("subfme. r3, r4")));
   static_assert(0x7c640190 == gekko_code_gen::parse(GEN_STR("subfze r3, r4")));
   static_assert(0x7c640191 == gekko_code_gen::parse(GEN_STR("subfze. r3, r4")));
   static_assert(0x4c411202 == gekko_code_gen::parse(GEN_STR("crand eq, gt, eq")));
   static_assert(0x4c411102 == gekko_code_gen::parse(GEN_STR("crandc eq, gt, eq")));
   static_assert(0x4c411242 == gekko_code_gen::parse(GEN_STR("creqv eq, gt, eq")));
   static_assert(0x4c4111c2 == gekko_code_gen::parse(GEN_STR("crnand eq, gt, eq")));
   static_assert(0x4c411042 == gekko_code_gen::parse(GEN_STR("crnor eq, gt, eq")));
   static_assert(0x4c411382 == gekko_code_gen::parse(GEN_STR("cror eq, gt, eq")));
   static_assert(0x4c411342 == gekko_code_gen::parse(GEN_STR("crorc eq, gt, eq")));
   static_assert(0x4c411182 == gekko_code_gen::parse(GEN_STR("crxor eq, gt, eq")));
   static_assert(0x4fe0fa02 == gekko_code_gen::parse(GEN_STR("crand 31, 0, 31")));
   static_assert(0x4fe0f902 == gekko_code_gen::parse(GEN_STR("crandc 31, 0, 31")));
   static_assert(0x4fe0fa42 == gekko_code_gen::parse(GEN_STR("creqv 31, 0, 31")));
   static_assert(0x4fe0f9c2 == gekko_code_gen::parse(GEN_STR("crnand 31, 0, 31")));
   static_assert(0x4fe0f842 == gekko_code_gen::parse(GEN_STR("crnor 31, 0, 31")));
   static_assert(0x4fe0fb82 == gekko_code_gen::parse(GEN_STR("cror 31, 0, 31")));
   static_assert(0x4fe0fb42 == gekko_code_gen::parse(GEN_STR("crorc 31, 0, 31")));
   static_assert(0x4fe0f982 == gekko_code_gen::parse(GEN_STR("crxor 31, 0, 31")));
   static_assert(0xfc602210 == gekko_code_gen::parse(GEN_STR("fabs f3, f4")));
   static_assert(0xfc602211 == gekko_code_gen::parse(GEN_STR("fabs. f3, f4")));
   static_assert(0xfc60201c == gekko_code_gen::parse(GEN_STR("fctiw f3, f4")));
   static_assert(0xfc60201d == gekko_code_gen::parse(GEN_STR("fctiw. f3, f4")));
   static_assert(0xfc60201e == gekko_code_gen::parse(GEN_STR("fctiwz f3, f4")));
   static_assert(0xfc60201f == gekko_code_gen::parse(GEN_STR("fctiwz. f3, f4")));
   static_assert(0xfc602090 == gekko_code_gen::parse(GEN_STR("fmr f3, f4")));
   static_assert(0xfc602091 == gekko_code_gen::parse(GEN_STR("fmr. f3, f4")));
   static_assert(0xfc602110 == gekko_code_gen::parse(GEN_STR("fnabs f3, f4")));
   static_assert(0xfc602111 == gekko_code_gen::parse(GEN_STR("fnabs. f3, f4")));
   static_assert(0xfc602050 == gekko_code_gen::parse(GEN_STR("fneg f3, f4")));
   static_assert(0xfc602051 == gekko_code_gen::parse(GEN_STR("fneg. f3, f4")));
   static_assert(0xec602030 == gekko_code_gen::parse(GEN_STR("fres f3, f4")));
   static_assert(0xec602031 == gekko_code_gen::parse(GEN_STR("fres. f3, f4")));
   static_assert(0xfc602018 == gekko_code_gen::parse(GEN_STR("frsp f3, f4")));
   static_assert(0xfc602019 == gekko_code_gen::parse(GEN_STR("frsp. f3, f4")));
   static_assert(0xfc602034 == gekko_code_gen::parse(GEN_STR("frsqrte f3, f4")));
   static_assert(0xfc602035 == gekko_code_gen::parse(GEN_STR("frsqrte. f3, f4")));
   static_assert(0xfc64282a == gekko_code_gen::parse(GEN_STR("fadd f3, f4, f5")));
   static_assert(0xec64282a == gekko_code_gen::parse(GEN_STR("fadds f3, f4, f5")));
   static_assert(0xfc642824 == gekko_code_gen::parse(GEN_STR("fdiv f3, f4, f5")));
   static_assert(0xec642824 == gekko_code_gen::parse(GEN_STR("fdivs f3, f4, f5")));
   static_assert(0xfc642828 == gekko_code_gen::parse(GEN_STR("fsub f3, f4, f5")));
   static_assert(0xec642828 == gekko_code_gen::parse(GEN_STR("fsubs f3, f4, f5")));
   static_assert(0xfc640172 == gekko_code_gen::parse(GEN_STR("fmul f3, f4, f5")));
   static_assert(0xec640172 == gekko_code_gen::parse(GEN_STR("fmuls f3, f4, f5")));
   static_assert(0xfc64317a == gekko_code_gen::parse(GEN_STR("fmadd f3, f4, f5, f6")));
   static_assert(0xfc64317b == gekko_code_gen::parse(GEN_STR("fmadd. f3, f4, f5, f6")));
   static_assert(0xec64317a == gekko_code_gen::parse(GEN_STR("fmadds f3, f4, f5, f6")));
   static_assert(0xec64317b == gekko_code_gen::parse(GEN_STR("fmadds. f3, f4, f5, f6")));
   static_assert(0xfc643178 == gekko_code_gen::parse(GEN_STR("fmsub f3, f4, f5, f6")));
   static_assert(0xfc643179 == gekko_code_gen::parse(GEN_STR("fmsub. f3, f4, f5, f6")));
   static_assert(0xec643178 == gekko_code_gen::parse(GEN_STR("fmsubs f3, f4, f5, f6")));
   static_assert(0xec643179 == gekko_code_gen::parse(GEN_STR("fmsubs. f3, f4, f5, f6")));
   static_assert(0xfc64317e == gekko_code_gen::parse(GEN_STR("fnmadd f3, f4, f5, f6")));
   static_assert(0xfc64317f == gekko_code_gen::parse(GEN_STR("fnmadd. f3, f4, f5, f6")));
   static_assert(0xec64317e == gekko_code_gen::parse(GEN_STR("fnmadds f3, f4, f5, f6")));
   static_assert(0xec64317f == gekko_code_gen::parse(GEN_STR("fnmadds. f3, f4, f5, f6")));
   static_assert(0xfc64317c == gekko_code_gen::parse(GEN_STR("fnmsub f3, f4, f5, f6")));
   static_assert(0xfc64317d == gekko_code_gen::parse(GEN_STR("fnmsub. f3, f4, f5, f6")));
   static_assert(0xec64317c == gekko_code_gen::parse(GEN_STR("fnmsubs f3, f4, f5, f6")));
   static_assert(0xec64317d == gekko_code_gen::parse(GEN_STR("fnmsubs. f3, f4, f5, f6")));
   static_assert(0xfc64316e == gekko_code_gen::parse(GEN_STR("fsel f3, f4, f5, f6")));
   static_assert(0xfc64316f == gekko_code_gen::parse(GEN_STR("fsel. f3, f4, f5, f6")));
   static_assert(0xfd842840 == gekko_code_gen::parse(GEN_STR("fcmpo cr3, f4, f5")));
   static_assert(0xfd842800 == gekko_code_gen::parse(GEN_STR("fcmpu cr3, f4, f5")));
   static_assert(0x48001234 == gekko_code_gen::parse(GEN_STR("b 0x1234")));
   static_assert(0x48001235 == gekko_code_gen::parse(GEN_STR("bl 0x1234")));
   static_assert(0x48001236 == gekko_code_gen::parse(GEN_STR("ba 0x1234")));
   static_assert(0x48001237 == gekko_code_gen::parse(GEN_STR("bla 0x1234")));
   static_assert(0x48004004 == gekko_code_gen::parse(GEN_STR("b 0x80004000~0x80008004")));
   static_assert(0x4bffc004 == gekko_code_gen::parse(GEN_STR("b 0x80008000~0x80004004")));
   static_assert(0x41821234 == gekko_code_gen::parse(GEN_STR("bc 12, eq, 0x1234")));
   static_assert(0x41821235 == gekko_code_gen::parse(GEN_STR("bcl 12, eq, 0x1234")));
   static_assert(0x41821236 == gekko_code_gen::parse(GEN_STR("bca 12, eq, 0x1234")));
   static_assert(0x41821237 == gekko_code_gen::parse(GEN_STR("bcla 12, eq, 0x1234")));
   static_assert(0x41811234 == gekko_code_gen::parse(GEN_STR("bc 12, gt, 0x1234")));
   static_assert(0x41811235 == gekko_code_gen::parse(GEN_STR("bcl 12, gt, 0x1234")));
   static_assert(0x41811236 == gekko_code_gen::parse(GEN_STR("bca 12, gt, 0x1234")));
   static_assert(0x41811237 == gekko_code_gen::parse(GEN_STR("bcla 12, gt, 0x1234")));
   static_assert(0x41801234 == gekko_code_gen::parse(GEN_STR("bc 12, lt, 0x1234")));
   static_assert(0x41801235 == gekko_code_gen::parse(GEN_STR("bcl 12, lt, 0x1234")));
   static_assert(0x41801236 == gekko_code_gen::parse(GEN_STR("bca 12, lt, 0x1234")));
   static_assert(0x41801237 == gekko_code_gen::parse(GEN_STR("bcla 12, lt, 0x1234")));
   static_assert(0x41831234 == gekko_code_gen::parse(GEN_STR("bc 12, so, 0x1234")));
   static_assert(0x41831235 == gekko_code_gen::parse(GEN_STR("bcl 12, so, 0x1234")));
   static_assert(0x41831236 == gekko_code_gen::parse(GEN_STR("bca 12, so, 0x1234")));
   static_assert(0x41831237 == gekko_code_gen::parse(GEN_STR("bcla 12, so, 0x1234")));
   static_assert(0x419f1234 == gekko_code_gen::parse(GEN_STR("bc 12, 31, 0x1234")));
   static_assert(0x419f1235 == gekko_code_gen::parse(GEN_STR("bcl 12, 31, 0x1234")));
   static_assert(0x419f1236 == gekko_code_gen::parse(GEN_STR("bca 12, 31, 0x1234")));
   static_assert(0x419f1237 == gekko_code_gen::parse(GEN_STR("bcla 12, 31, 0x1234")));
   static_assert(0x41821234 == gekko_code_gen::parse(GEN_STR("beq 0x1234")));
   static_assert(0x41821235 == gekko_code_gen::parse(GEN_STR("beql 0x1234")));
   static_assert(0x41821236 == gekko_code_gen::parse(GEN_STR("beqa 0x1234")));
   static_assert(0x41821237 == gekko_code_gen::parse(GEN_STR("beqla 0x1234")));
   static_assert(0x40821234 == gekko_code_gen::parse(GEN_STR("bne 0x1234")));
   static_assert(0x40821235 == gekko_code_gen::parse(GEN_STR("bnel 0x1234")));
   static_assert(0x40821236 == gekko_code_gen::parse(GEN_STR("bnea 0x1234")));
   static_assert(0x40821237 == gekko_code_gen::parse(GEN_STR("bnela 0x1234")));
   static_assert(0x41801234 == gekko_code_gen::parse(GEN_STR("blt 0x1234")));
   static_assert(0x41801235 == gekko_code_gen::parse(GEN_STR("bltl 0x1234")));
   static_assert(0x41801236 == gekko_code_gen::parse(GEN_STR("blta 0x1234")));
   static_assert(0x41801237 == gekko_code_gen::parse(GEN_STR("bltla 0x1234")));
   static_assert(0x40801234 == gekko_code_gen::parse(GEN_STR("bge 0x1234")));
   static_assert(0x40801235 == gekko_code_gen::parse(GEN_STR("bgel 0x1234")));
   static_assert(0x40801236 == gekko_code_gen::parse(GEN_STR("bgea 0x1234")));
   static_assert(0x40801237 == gekko_code_gen::parse(GEN_STR("bgela 0x1234")));
   static_assert(0x41811234 == gekko_code_gen::parse(GEN_STR("bgt 0x1234")));
   static_assert(0x41811235 == gekko_code_gen::parse(GEN_STR("bgtl 0x1234")));
   static_assert(0x41811236 == gekko_code_gen::parse(GEN_STR("bgta 0x1234")));
   static_assert(0x41811237 == gekko_code_gen::parse(GEN_STR("bgtla 0x1234")));
   static_assert(0x40811234 == gekko_code_gen::parse(GEN_STR("ble 0x1234")));
   static_assert(0x40811235 == gekko_code_gen::parse(GEN_STR("blel 0x1234")));
   static_assert(0x40811236 == gekko_code_gen::parse(GEN_STR("blea 0x1234")));
   static_assert(0x40811237 == gekko_code_gen::parse(GEN_STR("blela 0x1234")));
   static_assert(0x4d820420 == gekko_code_gen::parse(GEN_STR("bcctr 12, eq")));
   static_assert(0x4d820421 == gekko_code_gen::parse(GEN_STR("bcctrl 12, eq")));
   static_assert(0x4d810420 == gekko_code_gen::parse(GEN_STR("bcctr 12, gt")));
   static_assert(0x4d810421 == gekko_code_gen::parse(GEN_STR("bcctrl 12, gt")));
   static_assert(0x4d800420 == gekko_code_gen::parse(GEN_STR("bcctr 12, lt")));
   static_assert(0x4d800421 == gekko_code_gen::parse(GEN_STR("bcctrl 12, lt")));
   static_assert(0x4d830420 == gekko_code_gen::parse(GEN_STR("bcctr 12, so")));
   static_assert(0x4d830421 == gekko_code_gen::parse(GEN_STR("bcctrl 12, so")));
   static_assert(0x4d9f0420 == gekko_code_gen::parse(GEN_STR("bcctr 12, 31")));
   static_assert(0x4d9f0421 == gekko_code_gen::parse(GEN_STR("bcctrl 12, 31")));
   static_assert(0x4e800420 == gekko_code_gen::parse(GEN_STR("bctr")));
   static_assert(0x4e800421 == gekko_code_gen::parse(GEN_STR("bctrl")));
   static_assert(0x4d820420 == gekko_code_gen::parse(GEN_STR("beqctr")));
   static_assert(0x4d820421 == gekko_code_gen::parse(GEN_STR("beqctrl")));
   static_assert(0x4c820420 == gekko_code_gen::parse(GEN_STR("bnectr")));
   static_assert(0x4c820421 == gekko_code_gen::parse(GEN_STR("bnectrl")));
   static_assert(0x4d800420 == gekko_code_gen::parse(GEN_STR("bltctr")));
   static_assert(0x4d800421 == gekko_code_gen::parse(GEN_STR("bltctrl")));
   static_assert(0x4c800420 == gekko_code_gen::parse(GEN_STR("bgectr")));
   static_assert(0x4c800421 == gekko_code_gen::parse(GEN_STR("bgectrl")));
   static_assert(0x4d810420 == gekko_code_gen::parse(GEN_STR("bgtctr")));
   static_assert(0x4d810421 == gekko_code_gen::parse(GEN_STR("bgtctrl")));
   static_assert(0x4c810420 == gekko_code_gen::parse(GEN_STR("blectr")));
   static_assert(0x4c810421 == gekko_code_gen::parse(GEN_STR("blectrl")));
   static_assert(0x4d820020 == gekko_code_gen::parse(GEN_STR("bclr 12, eq")));
   static_assert(0x4d820021 == gekko_code_gen::parse(GEN_STR("bclrl 12, eq")));
   static_assert(0x4d810020 == gekko_code_gen::parse(GEN_STR("bclr 12, gt")));
   static_assert(0x4d810021 == gekko_code_gen::parse(GEN_STR("bclrl 12, gt")));
   static_assert(0x4d800020 == gekko_code_gen::parse(GEN_STR("bclr 12, lt")));
   static_assert(0x4d800021 == gekko_code_gen::parse(GEN_STR("bclrl 12, lt")));
   static_assert(0x4d830020 == gekko_code_gen::parse(GEN_STR("bclr 12, so")));
   static_assert(0x4d830021 == gekko_code_gen::parse(GEN_STR("bclrl 12, so")));
   static_assert(0x4d9f0020 == gekko_code_gen::parse(GEN_STR("bclr 12, 31")));
   static_assert(0x4d9f0021 == gekko_code_gen::parse(GEN_STR("bclrl 12, 31")));
   static_assert(0x4e800020 == gekko_code_gen::parse(GEN_STR("blr")));
   static_assert(0x4e800021 == gekko_code_gen::parse(GEN_STR("blrl")));
   static_assert(0x4d820020 == gekko_code_gen::parse(GEN_STR("beqlr")));
   static_assert(0x4d820021 == gekko_code_gen::parse(GEN_STR("beqlrl")));
   static_assert(0x4c820020 == gekko_code_gen::parse(GEN_STR("bnelr")));
   static_assert(0x4c820021 == gekko_code_gen::parse(GEN_STR("bnelrl")));
   static_assert(0x4d800020 == gekko_code_gen::parse(GEN_STR("bltlr")));
   static_assert(0x4d800021 == gekko_code_gen::parse(GEN_STR("bltlrl")));
   static_assert(0x4c800020 == gekko_code_gen::parse(GEN_STR("bgelr")));
   static_assert(0x4c800021 == gekko_code_gen::parse(GEN_STR("bgelrl")));
   static_assert(0x4d810020 == gekko_code_gen::parse(GEN_STR("bgtlr")));
   static_assert(0x4d810021 == gekko_code_gen::parse(GEN_STR("bgtlrl")));
   static_assert(0x4c810020 == gekko_code_gen::parse(GEN_STR("blelr")));
   static_assert(0x4c810021 == gekko_code_gen::parse(GEN_STR("blelrl")));
   static_assert(0x7c022000 == gekko_code_gen::parse(GEN_STR("cmp cr0, 0, r2, r4")));
   static_assert(0x2c021234 == gekko_code_gen::parse(GEN_STR("cmpi cr0, 0, r2, 0x1234")));
   static_assert(0x7c022040 == gekko_code_gen::parse(GEN_STR("cmpl cr0, 0, r2, r4")));
   static_assert(0x28021234 == gekko_code_gen::parse(GEN_STR("cmpli cr0, 0, r2, 0x1234")));
   static_assert(0x7c022000 == gekko_code_gen::parse(GEN_STR("cmp cr0, r2, r4")));
   static_assert(0x2c021234 == gekko_code_gen::parse(GEN_STR("cmpi cr0, r2, 0x1234")));
   static_assert(0x7c022040 == gekko_code_gen::parse(GEN_STR("cmpl cr0, r2, r4")));
   static_assert(0x28021234 == gekko_code_gen::parse(GEN_STR("cmpli cr0, r2, 0x1234")));
   static_assert(0x7c022000 == gekko_code_gen::parse(GEN_STR("cmpw r2, r4")));
   static_assert(0x7f822000 == gekko_code_gen::parse(GEN_STR("cmpw cr7, r2, r4")));
   static_assert(0x2c021234 == gekko_code_gen::parse(GEN_STR("cmpwi r2, 0x1234")));
   static_assert(0x2f821234 == gekko_code_gen::parse(GEN_STR("cmpwi cr7, r2, 0x1234")));
   static_assert(0x7c022040 == gekko_code_gen::parse(GEN_STR("cmplw r2, r4")));
   static_assert(0x7f822040 == gekko_code_gen::parse(GEN_STR("cmplw cr7, r2, r4")));
   static_assert(0x28021234 == gekko_code_gen::parse(GEN_STR("cmplwi r2, 0x1234")));
   static_assert(0x2b821234 == gekko_code_gen::parse(GEN_STR("cmplwi cr7, r2, 0x1234")));
   static_assert(0x887f1234 == gekko_code_gen::parse(GEN_STR("lbz r3, 0x1234(r31)")));
   static_assert(0x8c7f1234 == gekko_code_gen::parse(GEN_STR("lbzu r3, 0x1234(r31)")));
   static_assert(0xa87f1234 == gekko_code_gen::parse(GEN_STR("lha r3, 0x1234(r31)")));
   static_assert(0xac7f1234 == gekko_code_gen::parse(GEN_STR("lhau r3, 0x1234(r31)")));
   static_assert(0xa07f1234 == gekko_code_gen::parse(GEN_STR("lhz r3, 0x1234(r31)")));
   static_assert(0xa47f1234 == gekko_code_gen::parse(GEN_STR("lhzu r3, 0x1234(r31)")));
   static_assert(0xbbe11234 == gekko_code_gen::parse(GEN_STR("lmw r31, 0x1234(r1)")));
   static_assert(0x807f1234 == gekko_code_gen::parse(GEN_STR("lwz r3, 0x1234(r31)")));
   static_assert(0x847f1234 == gekko_code_gen::parse(GEN_STR("lwzu r3, 0x1234(r31)")));
   static_assert(0x987f1234 == gekko_code_gen::parse(GEN_STR("stb r3, 0x1234(r31)")));
   static_assert(0x9c7f1234 == gekko_code_gen::parse(GEN_STR("stbu r3, 0x1234(r31)")));
   static_assert(0xb07f1234 == gekko_code_gen::parse(GEN_STR("sth r3, 0x1234(r31)")));
   static_assert(0xb47f1234 == gekko_code_gen::parse(GEN_STR("sthu r3, 0x1234(r31)")));
   static_assert(0xbc7f1234 == gekko_code_gen::parse(GEN_STR("stmw r3, 0x1234(r31)")));
   static_assert(0x907f1234 == gekko_code_gen::parse(GEN_STR("stw r3, 0x1234(r31)")));
   static_assert(0x947f1234 == gekko_code_gen::parse(GEN_STR("stwu r3, 0x1234(r31)")));
   static_assert(0xc87f1234 == gekko_code_gen::parse(GEN_STR("lfd f3, 0x1234(r31)")));
   static_assert(0xcc7f1234 == gekko_code_gen::parse(GEN_STR("lfdu f3, 0x1234(r31)")));
   static_assert(0x7c642cee == gekko_code_gen::parse(GEN_STR("lfdux f3, r4, r5")));
   static_assert(0x7c642cae == gekko_code_gen::parse(GEN_STR("lfdx f3, r4, r5")));
   static_assert(0xc07f1234 == gekko_code_gen::parse(GEN_STR("lfs f3, 0x1234(r31)")));
   static_assert(0xc47f1234 == gekko_code_gen::parse(GEN_STR("lfsu f3, 0x1234(r31)")));
   static_assert(0x7c642c6e == gekko_code_gen::parse(GEN_STR("lfsux f3, r4, r5")));
   static_assert(0x7c642c2e == gekko_code_gen::parse(GEN_STR("lfsx f3, r4, r5")));
   static_assert(0xd87f1234 == gekko_code_gen::parse(GEN_STR("stfd f3, 0x1234(r31)")));
   static_assert(0xdc7f1234 == gekko_code_gen::parse(GEN_STR("stfdu f3, 0x1234(r31)")));
   static_assert(0x7c642dee == gekko_code_gen::parse(GEN_STR("stfdux f3, r4, r5")));
   static_assert(0x7c642dae == gekko_code_gen::parse(GEN_STR("stfdx f3, r4, r5")));
   static_assert(0xd07f1234 == gekko_code_gen::parse(GEN_STR("stfs f3, 0x1234(r31)")));
   static_assert(0xd47f1234 == gekko_code_gen::parse(GEN_STR("stfsu f3, 0x1234(r31)")));
   static_assert(0x7c642d6e == gekko_code_gen::parse(GEN_STR("stfsux f3, r4, r5")));
   static_assert(0x7c642d2e == gekko_code_gen::parse(GEN_STR("stfsx f3, r4, r5")));
   static_assert(0x4c1c0000 == gekko_code_gen::parse(GEN_STR("mcrf cr0, cr7")));
   static_assert(0xfc1c0080 == gekko_code_gen::parse(GEN_STR("mcrfs cr0, cr7")));
   static_assert(0x7f800400 == gekko_code_gen::parse(GEN_STR("mcrxr cr7")));
   static_assert(0x7c000026 == gekko_code_gen::parse(GEN_STR("mfcr r0")));
   static_assert(0xffe0048e == gekko_code_gen::parse(GEN_STR("mffs f31")));
   static_assert(0x7fe000a6 == gekko_code_gen::parse(GEN_STR("mfmsr r31")));
   static_assert(0x7c0102a6 == gekko_code_gen::parse(GEN_STR("mfspr r0, xer")));
   static_assert(0x7c0802a6 == gekko_code_gen::parse(GEN_STR("mfspr r0, lr")));
   static_assert(0x7c0902a6 == gekko_code_gen::parse(GEN_STR("mfspr r0, ctr")));
   static_assert(0x7c1042a6 == gekko_code_gen::parse(GEN_STR("mfspr r0, 272")));
   static_assert(0x7c0802a6 == gekko_code_gen::parse(GEN_STR("mflr r0")));
   static_assert(0x7c0902a6 == gekko_code_gen::parse(GEN_STR("mfctr r0")));
   static_assert(0x7c0102a6 == gekko_code_gen::parse(GEN_STR("mfxer r0")));
   static_assert(0x7fe25120 == gekko_code_gen::parse(GEN_STR("mtcrf 0x25, r31")));
   static_assert(0x7feff120 == gekko_code_gen::parse(GEN_STR("mtcr r31")));
   static_assert(0x7c000124 == gekko_code_gen::parse(GEN_STR("mtmsr r0")));
   static_assert(0x7c0103a6 == gekko_code_gen::parse(GEN_STR("mtspr xer, r0")));
   static_assert(0x7c0803a6 == gekko_code_gen::parse(GEN_STR("mtspr lr, r0")));
   static_assert(0x7c0903a6 == gekko_code_gen::parse(GEN_STR("mtspr ctr, r0")));
   static_assert(0x7c1043a6 == gekko_code_gen::parse(GEN_STR("mtspr 272, r0")));
   static_assert(0x7c0803a6 == gekko_code_gen::parse(GEN_STR("mtlr r0")));
   static_assert(0x7c0903a6 == gekko_code_gen::parse(GEN_STR("mtctr r0")));
   static_assert(0x7c0103a6 == gekko_code_gen::parse(GEN_STR("mtxer r0")));
   static_assert(0x501ffffe == gekko_code_gen::parse(GEN_STR("rlwimi r31, r0, 31, 31, 31")));
   static_assert(0x501ff83f == gekko_code_gen::parse(GEN_STR("rlwimi. r31, r0, 31, 0, 31")));
   static_assert(0x541ff83e == gekko_code_gen::parse(GEN_STR("rlwinm r31, r0, 31, 0, 31")));
   static_assert(0x541ff83f == gekko_code_gen::parse(GEN_STR("rlwinm. r31, r0, 31, 0, 31")));
   static_assert(0x5c1f783e == gekko_code_gen::parse(GEN_STR("rlwnm r31, r0, r15, 0, 31")));
   static_assert(0x5c1f783f == gekko_code_gen::parse(GEN_STR("rlwnm. r31, r0, r15, 0, 31")));
   static_assert(0x7fe0fb78 == gekko_code_gen::parse(GEN_STR("mr r0, r31")));
   static_assert(0x38607fff == gekko_code_gen::parse(GEN_STR("li r3, 0x7fff")));
   static_assert(0x38608001 == gekko_code_gen::parse(GEN_STR("li r3, -0x7fff")));
   static_assert(0x3c608001 == gekko_code_gen::parse(GEN_STR("lis r3, 0x8001")));
   static_assert(0x3c608000 == gekko_code_gen::parse(GEN_STR("lis r3, -0x8000")));
}
